import { Options } from "types";

export const defaultOptions: Options = {
  pathToName(pathArr, tags) {
    return pathArr.join("");
  },
};

export const HEAD_STRING = `/**
* This file was auto-generated by swagger-to-axios.
* Do not make direct changes to the file.
*/

import axios from 'axios';

function renderUrlTemplate(url: string, params: any) {
  return url.replace(/\{([^}]+)\}/g, (m, p) => {
    const ret = params[p];
    delete params[p];
    return ret;
  });
}

function http_get<Opt, Res>(url: string) {
  return async (opt: Opt) => {
    const newUrl = renderUrlTemplate(url, opt);
    try {
      const res = await axios.get<{ data: Res; code: number; message: string; success: boolean }>(newUrl, { params: opt });
      return res.data;
    } catch (err) {
      console.error(err);
      return undefined; // 非业务错误
    }
  };
}

function http_post<Opt, Res>(url: string) {
  return async (opt: Opt) => {
    const newUrl = renderUrlTemplate(url, opt);
    try {
      const res = await axios.post<{ data: Res; code: number; message: string; success: boolean }>(newUrl, opt);
      return res.data;
    } catch (err) {
      console.error(err);
      return undefined; // 非业务错误
    }
  };
}

function http_put<Opt, Res>(url: string) {
  return async (opt: Opt) => {
    const newUrl = renderUrlTemplate(url, opt);
    try {
      const res = await axios.put<{ data: Res; code: number; message: string; success: boolean }>(newUrl, opt);
      return res.data;
    } catch (err) {
      console.error(err);
      return undefined; // 非业务错误
    }
  };
}

function http_delete<Opt, Res>(url: string) {
  return async (opt: Opt) => {
    const newUrl = renderUrlTemplate(url, opt);
    try {
      const res = await axios.delete<{ data: Res; code: number; message: string; success: boolean }>(newUrl, { data: opt });
      return res.data;
    } catch (err) {
      console.error(err);
      return undefined; // 非业务错误
    }
  };
}

`;
